"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[255],{45539:e=>{e.exports=JSON.parse('{"functions":[{"name":"getVertices","desc":"provides a list of vertex positions in 3d space","params":[{"name":"basePart","desc":"","lua_type":"BasePart"}],"returns":[{"desc":"","lua_type":"{ [number]: Vertex }\\n"}],"function_type":"static","source":{"line":42,"path":"src/Mesh/init.lua"}},{"name":"getLines","desc":"provides a dictionary of line vertex pairs","params":[{"name":"basePart","desc":"","lua_type":"BasePart"}],"returns":[{"desc":"","lua_type":"{ [string]: Line }\\n"}],"function_type":"static","source":{"line":48,"path":"src/Mesh/init.lua"}},{"name":"getSurfaces","desc":"provides a dictionary of surface geometry data","params":[{"name":"basePart","desc":"","lua_type":"BasePart"}],"returns":[{"desc":"","lua_type":"{[Enum.NormalId]: Surface}\\n"}],"function_type":"static","source":{"line":54,"path":"src/Mesh/init.lua"}},{"name":"solveGreedyMesh","desc":"Performs a greedy mesh style simplification on a 3d table of boolean values","params":[{"name":"grid","desc":"","lua_type":"{ [Vector3]: boolean }"}],"returns":[],"function_type":"static","source":{"line":60,"path":"src/Mesh/init.lua"}},{"name":"getBoundingBoxAtCFrame","desc":"Generates a smallish bounding box at cframe that contains all the parts without the need for a model. ","params":[{"name":"orientation","desc":"","lua_type":"CFrame"},{"name":"parts","desc":"","lua_type":"{ [number]: BasePart }"}],"returns":[],"function_type":"static","source":{"line":149,"path":"src/Mesh/init.lua"}}],"properties":[{"name":"TetraPartAssetId","desc":"this is the id for the free model tetrahedron meshpart I use","lua_type":"number","source":{"line":24,"path":"src/Mesh/init.lua"}}],"types":[],"name":"Mesh","desc":"A basic utility for translating meshes into geometry useful elements. Does not currently support CSG or most user-imported meshes.","source":{"line":17,"path":"src/Mesh/init.lua"}}')}}]);